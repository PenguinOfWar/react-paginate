{"version":3,"sources":["../react_components/PaginationBoxView.js"],"names":["PaginationBoxView","props","handlePreviousPage","evt","preventDefault","returnValue","state","selected","handlePageSelected","handleNextPage","pageCount","setState","callCallback","selectedItem","onPageChange","pagination","items","pageRangeDisplayed","index","bind","pageClassName","pageLinkClassName","activeClassName","accessibleText","accessibleClass","leftSide","rightSide","page","breakView","pageView","getPageElement","marginPagesDisplayed","keys","Object","breakLabelKey","length","breakLabelValue","breakLabel","breakClassName","initialPage","forcePage","disableInitialCallback","nextProps","pageIndex","hrefBuilder","disabled","disabledClassName","previousClasses","previousClassName","nextClasses","nextClassName","containerClassName","previousLinkClassName","previousLabel","nextLinkClassName","nextLabel","propTypes","number","isRequired","node","func","bool","string","defaultProps"],"mappings":"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","file":"PaginationBoxView.js","sourcesContent":["'use strict';\n\nimport React, { Component, PropTypes } from 'react';\nimport classNames from 'classnames';\n\nimport createFragment from 'react-addons-create-fragment';\nimport PageView from './PageView';\nimport BreakView from './BreakView';\n\n\nexport default class PaginationBoxView extends Component {\n  static propTypes = {\n    pageCount             : PropTypes.number.isRequired,\n    pageRangeDisplayed    : PropTypes.number.isRequired,\n    marginPagesDisplayed  : PropTypes.number.isRequired,\n    previousLabel         : PropTypes.node,\n    nextLabel             : PropTypes.node,\n    breakLabel            : PropTypes.node,\n    hrefBuilder           : PropTypes.func,\n    onPageChange          : PropTypes.func,\n    initialPage           : PropTypes.number,\n    forcePage             : PropTypes.number,\n    disableInitialCallback: PropTypes.bool,\n    containerClassName    : PropTypes.string,\n    pageClassName         : PropTypes.string,\n    pageLinkClassName     : PropTypes.string,\n    activeClassName       : PropTypes.string,\n    previousClassName     : PropTypes.string,\n    nextClassName         : PropTypes.string,\n    previousLinkClassName : PropTypes.string,\n    nextLinkClassName     : PropTypes.string,\n    disabledClassName     : PropTypes.string,\n    breakClassName        : PropTypes.string\n  };\n\n  static defaultProps = {\n    pageCount             : 10,\n    pageRangeDisplayed    : 2,\n    marginPagesDisplayed  : 3,\n    activeClassName       : \"selected\",\n    previousClassName     : \"previous\",\n    nextClassName         : \"next\",\n    previousLabel         : \"Previous\",\n    nextLabel             : \"Next\",\n    breakLabel            : \"...\",\n    disabledClassName     : \"disabled\",\n    disableInitialCallback: false\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: props.initialPage ? props.initialPage :\n                props.forcePage   ? props.forcePage :\n                0\n    };\n  }\n\n  componentDidMount() {\n    // Call the callback with the initialPage item:\n    if (typeof(this.props.initialPage) !== 'undefined' && !this.props.disableInitialCallback) {\n      this.callCallback(this.props.initialPage);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (typeof(nextProps.forcePage) !== 'undefined' && this.props.forcePage !== nextProps.forcePage) {\n      this.setState({selected: nextProps.forcePage});\n    }\n  }\n\n  handlePreviousPage = evt => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (this.state.selected > 0) {\n      this.handlePageSelected(this.state.selected - 1, evt);\n    }\n  };\n\n  handleNextPage = evt => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n    if (this.state.selected < this.props.pageCount - 1) {\n      this.handlePageSelected(this.state.selected + 1, evt);\n    }\n  };\n\n  handlePageSelected = (selected, evt) => {\n    evt.preventDefault ? evt.preventDefault() : (evt.returnValue = false);\n\n    if (this.state.selected === selected) return;\n\n    this.setState({selected: selected});\n\n    // Call the callback with the new selected item:\n    this.callCallback(selected);\n  };\n\n  hrefBuilder(pageIndex) {\n    if (this.props.hrefBuilder &&\n      pageIndex !== this.state.selected &&\n      pageIndex >= 0 &&\n      pageIndex < this.props.pageCount\n    ) {\n      return this.props.hrefBuilder(pageIndex + 1);\n    }\n  }\n\n  callCallback = (selectedItem) => {\n    if (typeof(this.props.onPageChange) !== \"undefined\" &&\n        typeof(this.props.onPageChange) === \"function\") {\n      this.props.onPageChange({selected: selectedItem});\n    }\n  };\n\n  getPageElement(index) {\n    return <PageView\n      onClick={this.handlePageSelected.bind(null, index)}\n      selected={this.state.selected === index}\n      pageClassName={this.props.pageClassName}\n      pageLinkClassName={this.props.pageLinkClassName}\n      activeClassName={this.props.activeClassName}\n      href={this.hrefBuilder(index)}\n      page={index + 1} />\n  }\n\n  pagination = () => {\n    let items = {};\n\n    if (this.props.pageCount <= this.props.pageRangeDisplayed) {\n\n      for (let index = 0; index < this.props.pageCount; index++) {\n        items['key' + index] = <PageView\n          onClick={this.handlePageSelected.bind(null, index)}\n          selected={this.state.selected === index}\n          pageClassName={this.props.pageClassName}\n          pageLinkClassName={this.props.pageLinkClassName}\n          activeClassName={this.props.activeClassName}\n          accessibleText={this.props.accessibleText}\n          accessibleClass={this.props.accessibleClass}\n          page={index + 1} />\n      }\n\n    } else {\n\n      let leftSide  = (this.props.pageRangeDisplayed / 2);\n      let rightSide = (this.props.pageRangeDisplayed - leftSide);\n\n      if (this.state.selected > this.props.pageCount - this.props.pageRangeDisplayed / 2) {\n        rightSide = this.props.pageCount - this.state.selected;\n        leftSide  = this.props.pageRangeDisplayed - rightSide;\n      }\n      else if (this.state.selected < this.props.pageRangeDisplayed / 2) {\n        leftSide  = this.state.selected;\n        rightSide = this.props.pageRangeDisplayed - leftSide;\n      }\n\n      let index;\n      let page;\n      let breakView;\n\n      for (index = 0; index < this.props.pageCount; index++) {\n\n        page = index + 1;\n\n        let pageView = this.getPageElement(index);\n\n        if (page <= this.props.marginPagesDisplayed) {\n          items['key' + index] = pageView;\n          continue;\n        }\n\n        if (page > this.props.pageCount - this.props.marginPagesDisplayed) {\n          items['key' + index] = pageView;\n          continue;\n        }\n\n        if ((index >= this.state.selected - leftSide) && (index <= this.state.selected + rightSide)) {\n          items['key' + index] = pageView;\n          continue;\n        }\n\n        let keys            = Object.keys(items);\n        let breakLabelKey   = keys[keys.length - 1];\n        let breakLabelValue = items[breakLabelKey];\n\n        if (this.props.breakLabel && breakLabelValue !== breakView) {\n          breakView = (\n            <BreakView\n              breakLabel={this.props.breakLabel}\n              breakClassName={this.props.breakClassName}\n            />\n          );\n\n          items['key' + index] = breakView;\n        }\n      }\n    }\n\n    return items;\n  };\n\n  render() {\n    let disabled = this.props.disabledClassName;\n\n    const previousClasses = classNames(this.props.previousClassName,\n                                       {[disabled]: this.state.selected === 0});\n\n    const nextClasses = classNames(this.props.nextClassName,\n                                   {[disabled]: this.state.selected === this.props.pageCount - 1});\n\n    return (\n      <ul className={this.props.containerClassName}>\n        <li className={previousClasses}>\n          <a onClick={this.handlePreviousPage}\n             className={this.props.previousLinkClassName}\n             href={this.hrefBuilder(this.state.selected - 1)}\n             tabIndex=\"0\"\n             onKeyPress={this.handlePreviousPage}>\n            {this.props.previousLabel}\n          </a>\n        </li>\n\n        {createFragment(this.pagination())}\n\n        <li className={nextClasses}>\n          <a onClick={this.handleNextPage}\n             className={this.props.nextLinkClassName}\n             href={this.hrefBuilder(this.state.selected + 1)}\n             tabIndex=\"0\"\n             onKeyPress={this.handleNextPage}>\n            {this.props.nextLabel}\n          </a>\n        </li>\n      </ul>\n    );\n  }\n};\n"]}